// This file is generated by kxml_compiler from kde-features.rng.
// All changes you do to this file will be lost.
/*
    This file is part of KDE.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
    USA.

    As a special exception, permission is given to link this program
    with any edition of Qt, and distribute the resulting executable,
    without including the source code for Qt in the source distribution.
 */
#ifndef KDE_FEATURES_H
#define KDE_FEATURES_H

#include <QString>
#include <QList>

class Responsible
{
  public:
    typedef QList<Responsible *> List;

  public:
    void setName( const QString &v );
    QString name() const;
    void setEmail( const QString &v );
    QString email() const;
    QString writeElement();

  private:
    QString mName;
    QString mEmail;
};

class Feature
{
  public:
    typedef QList<Feature *> List;

  public:
    void setStatus( const QString &v );
    QString status() const;
    void setTarget( const QString &v );
    QString target() const;
    void setSummary( const QString &v );
    QString summary() const;
    void addResponsible( Responsible *v );
    void setResponsibleList( const Responsible::List &v );
    Responsible::List responsibleList() const;
    QString writeElement();

  private:
    QString mStatus;
    QString mTarget;
    QString mSummary;
    Responsible::List mResponsibleList;
};

class Category
{
  public:
    typedef QList<Category *> List;

  public:
    void setName( const QString &v );
    QString name() const;
    void addFeature( Feature *v );
    void setFeatureList( const Feature::List &v );
    Feature::List featureList() const;
    void addCategory( Category *v );
    void setCategoryList( const Category::List &v );
    Category::List categoryList() const;
    QString writeElement();

  private:
    QString mName;
    Feature::List mFeatureList;
    Category::List mCategoryList;
};

class Features
{
  public:
    void addCategory( Category *v );
    void setCategoryList( const Category::List &v );
    Category::List categoryList() const;
    QString writeElement();
    bool writeFile( const QString &filename );

  private:
    Category::List mCategoryList;
};

#endif
